# This workflow build and push a Docker container to Google Artifact Registry
# and deploy it on Cloud Run when triggered manually. 

name: 'Dispatch Deploy'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment (e.g., dev, uat, prod, alpha)'
        required: true
        type: string
        default: 'dev'
      tag:
        description: 'Optional version for the deployment'
        required: false
        type: string
        default: 'v0.0.0'
  
env:

  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  REGION: ${{ secrets.REGION_LOC_1 }}
  SERVICE: 'locutus'
  IMAGE_NAME: 'locutus_img'
  GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

jobs:
  
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      - name: Set up environment
        run: echo "Deploying to ${{ github.event.inputs.environment }} environment"

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ env.GCP_CREDENTIALS }}

      - name: 'Docker Auth'
        run: |
          gcloud auth configure-docker "${{ env.REGION }}-docker.pkg.dev"

      - name: 'Configure Git user'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: 'Set Version'
        run: |
          VERSION="${{ github.event.inputs.tag }}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Extracted Version: ${VERSION}"

      - name: 'Build and Push Container'
        run: |
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          env_vars: VERSION=${{ env.VERSION }}